{"version":3,"sources":["reducers/questionReducer.js","reducers/index.js","components/Home/Form/Question/index.js","components/Home/Form/index.js","components/Home/index.js","components/Editor/QuestionForm/index.js","components/Editor/AllQuestions/Question/index.js","components/Editor/EditComponent/index.js","components/Editor/AllQuestions/index.js","components/Editor/index.js","index.js"],"names":["questionReducer","state","arguments","length","undefined","action","type","concat","data","filter","question","id","map","Object","objectSpread","editing","query","newQuery","answer","newAnswer","combineReducers","form","formReducer","questions","Question","react_default","a","createElement","className","this","props","Field","name","component","split","key","value","placeholder","Component","connect","reduxForm","handleSubmit","pristine","reset","submitting","_React$useState","React","useState","_React$useState2","slicedToArray","open","setOpen","onSubmit","Form_Question","onClick","disabled","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","event","reason","ContentProps","aria-describedby","message","Home","selections","submit","values","_i","_Object$entries","entries","_ref3","_ref2","_this","push","toCopy","join","toString","copyBox","document","body","appendChild","setAttribute","getElementById","select","execCommand","removeChild","e","preventDefault","Home_Form","QuestionForm","getQuery","getAnswer","Date","dispatch","_this2","required","ref","input","rows","cols","EditComponent","handleEdit","defaultValue","AllQuestions","Editor_EditComponent","AllQuestions_Question","Editor","Editor_QuestionForm","Editor_AllQuestions","store","createStore","rootReducer","ReactDOM","render","es","react_router_dom","to","react_router","path","exact"],"mappings":"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","file":"static/js/main.19e2e8dc.chunk.js","sourcesContent":["const questionReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n    case 'ADD_QUESTION':\r\n    return state.concat([action.data])\r\n    case 'DELETE_QUESTION':\r\n    return state.filter((question) => question.id !== action.id)\r\n    case 'EDIT_QUESTION':\r\n    return state.map((question) => question.id === action.id ? { ...question, editing: !question.editing } : question)\r\n    case 'UPDATE':\r\n    return state.map((question) => {\r\n    if (question.id === action.id) {\r\n    return {\r\n    ...question,\r\n    query: action.data.newQuery,\r\n    answer: action.data.newAnswer,\r\n    editing: !question.editing\r\n    }\r\n    } else return question;\r\n    })\r\n    default:\r\n    return state;\r\n    }\r\n    }\r\n    export default questionReducer;","import { combineReducers } from \"redux\";\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport questionReducer from './questionReducer';\r\n\r\nexport default combineReducers({\r\n    form: formReducer,\r\n    questions: questionReducer\r\n});","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Field } from 'redux-form';\r\nclass Question extends Component {\r\nrender() {\r\nreturn (\r\n    <div className=\"home_question\">\r\n      <label className=\"form-question\">{this.props.question.query}</label>\r\n      <div className=\"home_answer\">\r\n          <Field name={this.props.question.query} component=\"select\">\r\n            <option />\r\n            {this.props.question.answer.split(',').map((answer) => (\r\n              <option className=\"question_answer\" key={answer} value={answer}>{answer}</option>\r\n            ))}\r\n          </Field>\r\n      </div>\r\n      <div className=\"home_question_textbox\">\r\n        <Field name={this.props.question.query + ' (OTHER_ANSWER)'} placeholder='other...' component=\"textarea\" />\r\n      </div>\r\n</div>\r\n);\r\n}\r\n}\r\nexport default connect()(Question);","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport Question from './Question';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\n\r\n\r\nconst Form = (props) => {\r\n  \r\n  const { handleSubmit, pristine, reset, submitting } = props\r\n  const [open, setOpen] = React.useState(false);\r\n  \r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  }\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  }\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"home-form\">\r\n    <div className=\"home-question-box\">\r\n        {props.questions.map((question) => (\r\n            <div key={question.id}>\r\n                {\r\n                    <Question question={question} key={question.id} />\r\n                }\r\n            </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"home_additional-notes\">\r\n        <label className=\"home_additional-notes_field\">Additional Notes</label>\r\n        <div>\r\n          <Field name=\"Additional Notes\" component=\"textarea\" />\r\n        </div>\r\n      </div>\r\n      <div className=\"home_buttons\">\r\n        <button type=\"submit\" onClick={handleClick} disabled={pristine || submitting}>\r\n          Copy\r\n        </button>\r\n          <Snackbar\r\n            anchorOrigin={{\r\n              vertical: 'bottom',\r\n              horizontal: 'left',\r\n            }}\r\n            open={open}\r\n            autoHideDuration={2000}\r\n            onClose={handleClose}\r\n            ContentProps={{\r\n              'aria-describedby': 'message-id',\r\n            }}\r\n            message={<span id=\"message-id\">Copied to Clipboard</span>}\r\n          />\r\n        <button type=\"button\" disabled={pristine || submitting} onClick={reset}>\r\n          Reset\r\n        </button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\n\r\nexport default reduxForm({\r\n  form: 'simple' // a unique identifier for this form\r\n})(Form);","import React, { Component } from 'react';\r\nimport Form from './Form';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Home extends Component {\r\n    selections = [];\r\n\r\n    submit = values => {\r\n\r\n      for (let [key, value] of Object.entries(values)) {\r\n        this.selections.push(key + ': ' + value)\r\n      }\r\n      let toCopy = this.selections.join('\\n').toString();\r\n\r\n      // Create a dummy input to copy the string array inside it\r\n      let copyBox = document.createElement(\"textarea\");\r\n\r\n      // Add it to the document\r\n      document.body.appendChild(copyBox);\r\n\r\n      // Set its ID\r\n      copyBox.setAttribute(\"id\", \"copy-selections\");\r\n      \r\n      // Output the array into it\r\n      document.getElementById(\"copy-selections\").value=toCopy;\r\n\r\n      // Select it\r\n      copyBox.select();\r\n\r\n      // Copy its contents\r\n      document.execCommand(\"copy\");\r\n\r\n      // Remove it as its not needed anymore\r\n      document.body.removeChild(copyBox);\r\n\r\n      this.selections = [];\r\n    };\r\n\r\n    handleChange(e) {\r\n      e.preventDefault();\r\n    };\r\n\r\n    render() { \r\n        return ( \r\n            <div>\r\n                <Form \r\n                  onSubmit={this.submit} \r\n                  questions={this.props.questions} \r\n                />\r\n            </div>\r\n         );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    questions: state.questions\r\n  }\r\n}\r\n \r\nexport default connect(mapStateToProps)(Home);","\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass QuestionForm extends Component {\r\nhandleSubmit = (e) => {\r\ne.preventDefault();\r\n const query = this.getQuery.value;\r\n const answer = this.getAnswer.value;\r\n const data = {\r\n  id: new Date(),\r\n  query,\r\n  answer,\r\n  editing: false\r\n }\r\n this.props.dispatch({\r\n type: 'ADD_QUESTION',\r\n data\r\n })\r\n this.getQuery.value = '';\r\n this.getAnswer.value = '';\r\n}\r\nrender() {\r\nreturn (\r\n<div className=\"question-container\">\r\n  <h2 className=\"question_heading\">Ask a Question</h2>\r\n  <form className=\"form\" onSubmit={this.handleSubmit} >\r\n   <input required type=\"text\" ref={(input) => this.getQuery = input}\r\n   placeholder=\"Ask a Question.\" /><br />\r\n   <textarea required rows=\"5\" ref={(input) => this.getAnswer = input}\r\n   cols=\"28\" placeholder=\"Separate Answers with Commas.\" /><br />\r\n   <button>Submit</button>\r\n  </form>\r\n</div>\r\n);\r\n}\r\n}\r\nexport default connect()(QuestionForm);","\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Question extends Component {\r\nrender() {\r\nreturn (\r\n<div className=\"question\">\r\n  <h3 className=\"question_query\">{this.props.question.query}</h3>\r\n  <ul className='answerList'>\r\n    {this.props.question.answer.split(',').map((answer) => (\r\n      <li className='answerListItem' key={answer}>{answer}</li>\r\n    ))}\r\n  </ul>\r\n  <div className=\"control-buttons\">\r\n    <button className=\"edit\"\r\n    onClick={() => this.props.dispatch({ \r\n        type: 'EDIT_QUESTION', \r\n        id: this.props.question.id })\r\n    }\r\n    >Edit</button>\r\n    <button className=\"delete\"\r\n    onClick={() => this.props.dispatch({ \r\n        type: 'DELETE_QUESTION', \r\n        id: this.props.question.id })}\r\n    >Delete</button>\r\n  </div>\r\n</div>\r\n);\r\n}\r\n}\r\nexport default connect()(Question);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass EditComponent extends Component {\r\nhandleEdit = (e) => {\r\n  e.preventDefault();\r\n  const newQuery = this.getQuery.value;\r\n  const newAnswer = this.getAnswer.value;\r\n  const data = {\r\n    newQuery,\r\n    newAnswer\r\n  }\r\n  this.props.dispatch({ \r\n      type: 'UPDATE', id: this.props.question.id, \r\n      data: data \r\n    })\r\n}\r\nrender() {\r\nreturn (\r\n<div key={this.props.question.id} className=\"question\">\r\n  <form className=\"form\" onSubmit={this.handleEdit}>\r\n    <input required type=\"text\" ref={(input) => this.getQuery = input}\r\n    defaultValue={this.props.question.query} placeholder=\"Ask a Question.\" /><br /><br />\r\n    <textarea required rows=\"5\" ref={(input) => this.getAnswer = input}\r\n    defaultValue={this.props.question.answer} cols=\"28\" placeholder=\"Separate Answers with Commas.\" /><br /><br />\r\n    <button>Update</button>\r\n  </form>\r\n</div>\r\n);\r\n}\r\n}\r\nexport default connect()(EditComponent);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Question from './Question';\r\nimport EditComponent from '../EditComponent';\r\n\r\nclass AllQuestions extends Component {\r\nrender() {\r\nreturn (\r\n<div>\r\n  <h2 className=\"question_heading\">All Questions</h2>\r\n  {this.props.questions.map((question) => (\r\n        <div key={question.id}>\r\n            {question.editing ? \r\n                <EditComponent question={question} key={question.id} /> : \r\n                <Question question={question} key={question.id} />\r\n            }\r\n        </div>\r\n    ))}\r\n</div>\r\n);\r\n}\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\nreturn {\r\n    questions: state.questions\r\n}\r\n}\r\nexport default connect(mapStateToProps)(AllQuestions);","import React from 'react'\r\nimport QuestionForm from './QuestionForm'\r\nimport AllQuestions from './AllQuestions'\r\nimport { connect } from 'react-redux';\r\n\r\nclass Editor extends React.Component {\r\n  \r\n  submit = values => {\r\n    this.props.dispatch({\r\n      type: 'ADD_QUESTION',\r\n      values\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <QuestionForm onSubmit={this.submit} />\r\n        <AllQuestions />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps =(state) => {\r\n  return {\r\n      questions: state.questions\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Editor)","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\nimport { createStore } from 'redux';\r\nimport rootReducer from './reducers';\r\nimport Home from './components/Home';\r\nimport Editor from './components/Editor';\r\n\r\nimport './index.css';\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <Router>\r\n            <div className='navbar'>\r\n                <Link className=\"navlink\" to='/'>Home</Link>\r\n                <h2>Call Notes</h2>\r\n                <Link className=\"navlink\" to='/editor'>Editor</Link>\r\n            </div>\r\n            \r\n            <Route path='/' exact component={Home} />\r\n            <Route path='/editor/' component={Editor} />\r\n        </Router>\r\n    </Provider>, document.getElementById('root'));"],"sourceRoot":""}